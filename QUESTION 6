class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def left_shift(head, k):
    if not head or k == 0:
        return head

    # Find the length of the linked list
    length = 1
    current = head
    while current.next:
        length += 1
        current = current.next

    # Calculate the actual number of shifts (k = k % length)
    k = k % length
    if k == 0:
        return head

    # Traverse to the (length - k)th node
    current = head
    for _ in range(length - k - 1):
        current = current.next

    # Perform the rotation
    new_head = current.next
    current.next = None
    current = new_head
    while current.next:
        current = current.next
    current.next = head

    return new_head
